// <auto-generated />
using System;
using Infraestrutura.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dados.Migrations
{
    [DbContext(typeof(MovimentosManuaisContext))]
    [Migration("20200405150117_MigrationInicial")]
    partial class MigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Negocio.Dominio.Entidades.EntidadeManual", b =>
                {
                    b.Property<decimal>("Mes")
                        .HasColumnName("DAT_MES")
                        .HasColumnType("numeric(2,0)");

                    b.Property<decimal>("Ano")
                        .HasColumnName("DAT_ANO")
                        .HasColumnType("numeric(4,0)");

                    b.Property<decimal>("NumeroLancamento")
                        .HasColumnName("NUM_LANCAMENTO")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("CodigoProduto")
                        .HasColumnName("COD_PRODUTO")
                        .HasColumnType("char(4)");

                    b.Property<string>("CodigoProdutoCosif")
                        .HasColumnName("COD_COSIF")
                        .HasColumnType("char(11)");

                    b.Property<string>("CodigoUsuario")
                        .HasColumnName("COD_USUARIO")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnName("DAT_MOVIMENTO")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Descricao")
                        .HasColumnName("DES_DESCRICAO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoCodigoProduto")
                        .HasColumnType("char(4)");

                    b.Property<string>("ProdutoCosifCodigoProduto")
                        .HasColumnType("char(4)");

                    b.Property<string>("ProdutoCosifCodigoProdutoCosif")
                        .HasColumnType("char(11)");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VAL_VALOR")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Mes", "Ano", "NumeroLancamento", "CodigoProduto", "CodigoProdutoCosif");

                    b.HasIndex("ProdutoCodigoProduto");

                    b.HasIndex("ProdutoCosifCodigoProduto", "ProdutoCosifCodigoProdutoCosif");

                    b.ToTable("MOVIMENTO_MANUAL");
                });

            modelBuilder.Entity("Negocio.Dominio.Entidades.Produto", b =>
                {
                    b.Property<string>("CodigoProduto")
                        .HasColumnName("COD_PRODUTO")
                        .HasColumnType("char(4)");

                    b.Property<string>("DescricaoProduto")
                        .HasColumnName("DES_PRODUTO")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STA_STATUS")
                        .HasColumnType("char(1)");

                    b.HasKey("CodigoProduto");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("Negocio.Dominio.Entidades.ProdutoCosif", b =>
                {
                    b.Property<string>("CodigoProduto")
                        .HasColumnName("COD_PRODUTO")
                        .HasColumnType("char(4)");

                    b.Property<string>("CodigoProdutoCosif")
                        .HasColumnName("COD_COSIF")
                        .HasColumnType("char(11)");

                    b.Property<string>("CodigoClassificacao")
                        .HasColumnName("COD_CLASSIFICACAO")
                        .HasColumnType("char(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STA_STATUS")
                        .HasColumnType("char(1)");

                    b.HasKey("CodigoProduto", "CodigoProdutoCosif");

                    b.ToTable("PRODUTO_COSIF");
                });

            modelBuilder.Entity("Negocio.Dominio.Entidades.EntidadeManual", b =>
                {
                    b.HasOne("Negocio.Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigoProduto");

                    b.HasOne("Negocio.Dominio.Entidades.ProdutoCosif", "ProdutoCosif")
                        .WithMany()
                        .HasForeignKey("ProdutoCosifCodigoProduto", "ProdutoCosifCodigoProdutoCosif");
                });

            modelBuilder.Entity("Negocio.Dominio.Entidades.ProdutoCosif", b =>
                {
                    b.HasOne("Negocio.Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("CodigoProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
